strict digraph words {
"IOINIT" [shape=box]
"IOTX" [shape=box]
"IORX" [shape=box]
"EXECUTE" [shape=box]
"STORE" [shape=box]
"CSTORE" [shape=box]
"LOAD" [shape=box]
"CLOAD" [shape=box]
"RFROM" [shape=box]
"TOR" [shape=box]
"RLOAD" [shape=box]
"SPLOAD" [shape=box]
"SPSTORE" [shape=box]
"RPLOAD" [shape=box]
"RPSTORE" [shape=box]
"DUP" [shape=box]
"OVER" [shape=box]
"SWAP" [shape=box]
"DROP" [shape=box]
"UPLUS" [shape=box]
"PLUS" [shape=box]
"XOR" [shape=box]
"AND" [shape=box]
"OR" [shape=box]
"ZLESS" [shape=box]
"UMSTAR" [shape=box]
"UMMOD" [shape=box]
"SPIINIT" [shape=box]
"SPISEL" [shape=box]
"SPIEXCH" [shape=box]
"SPITXRX" [shape=box]
"LOADEXEC" -> "LOAD"
"LOADEXEC" -> "DUP"
"LOADEXEC" -> "EXECUTE"
"EMIT" -> "LOADEXEC"
"QKEY" -> "LOADEXEC"
"KEY" -> "QKEY"
"NUFQ" -> "QKEY"
"NUFQ" -> "DUP"
"NUFQ" -> "DDROP"
"NUFQ" -> "KEY"
"NUFQ" -> "EQUAL"
"DEPTH" -> "SPLOAD"
"DEPTH" -> "SPZERO"
"DEPTH" -> "SWAP"
"DEPTH" -> "SUB"
"DEPTH" -> "SLASH"
"PICK" -> "INC"
"PICK" -> "CELLS"
"PICK" -> "SPLOAD"
"PICK" -> "PLUS"
"PICK" -> "LOAD"
"DDUP" -> "OVER"
"DDROP" -> "DROP"
"DUPNZ" -> "DUP"
"ROT" -> "TOR"
"ROT" -> "SWAP"
"ROT" -> "RFROM"
"NOT" -> "XOR"
"NEGATE" -> "NOT"
"NEGATE" -> "PLUS"
"DNEGATE" -> "NOT"
"DNEGATE" -> "TOR"
"DNEGATE" -> "UPLUS"
"DNEGATE" -> "RFROM"
"DNEGATE" -> "PLUS"
"SUB" -> "NEGATE"
"SUB" -> "PLUS"
"ABS" -> "DUP"
"ABS" -> "ZLESS"
"ABS" -> "NEGATE"
"STAR" -> "UMSTAR"
"STAR" -> "DROP"
"MSTAR" -> "DDUP"
"MSTAR" -> "XOR"
"MSTAR" -> "ZLESS"
"MSTAR" -> "TOR"
"MSTAR" -> "ABS"
"MSTAR" -> "SWAP"
"MSTAR" -> "UMSTAR"
"MSTAR" -> "RFROM"
"MSTAR" -> "DNEGATE"
"FMSMOD" -> "DUP"
"FMSMOD" -> "ZLESS"
"FMSMOD" -> "TOR"
"FMSMOD" -> "NEGATE"
"FMSMOD" -> "DNEGATE"
"FMSMOD" -> "RFROM"
"FMSMOD" -> "RLOAD"
"FMSMOD" -> "PLUS"
"FMSMOD" -> "UMMOD"
"FMSMOD" -> "SWAP"
"SLMOD" -> "OVER"
"SLMOD" -> "ZLESS"
"SLMOD" -> "SWAP"
"SLMOD" -> "FMSMOD"
"MOD" -> "SLMOD"
"MOD" -> "DROP"
"SLASH" -> "SLMOD"
"SLASH" -> "SWAP"
"SLASH" -> "DROP"
"CELLP" -> "PLUS"
"CHARP" -> "PLUS"
"INC" -> "PLUS"
"DEC" -> "PLUS"
"CELLS" -> "DUP"
"CELLS" -> "PLUS"
"PLUS_STORE" -> "SWAP"
"PLUS_STORE" -> "OVER"
"PLUS_STORE" -> "LOAD"
"PLUS_STORE" -> "PLUS"
"PLUS_STORE" -> "STORE"
"ULESS" -> "DDUP"
"ULESS" -> "XOR"
"ULESS" -> "ZLESS"
"ULESS" -> "SWAP"
"ULESS" -> "DROP"
"ULESS" -> "SUB"
"LESS" -> "DDUP"
"LESS" -> "XOR"
"LESS" -> "ZLESS"
"LESS" -> "DROP"
"LESS" -> "SUB"
"MAX" -> "DDUP"
"MAX" -> "LESS"
"MAX" -> "SWAP"
"MAX" -> "DROP"
"MIN" -> "DDUP"
"MIN" -> "SWAP"
"MIN" -> "LESS"
"MIN" -> "DROP"
"WITHIN" -> "OVER"
"WITHIN" -> "SUB"
"WITHIN" -> "TOR"
"WITHIN" -> "RFROM"
"WITHIN" -> "ULESS"
"EQUAL" -> "XOR"
"COUNT" -> "DUP"
"COUNT" -> "CHARP"
"COUNT" -> "SWAP"
"COUNT" -> "CLOAD"
"CMOVE" -> "TOR"
"CMOVE" -> "DUP"
"CMOVE" -> "CLOAD"
"CMOVE" -> "RLOAD"
"CMOVE" -> "CSTORE"
"CMOVE" -> "CHARP"
"CMOVE" -> "RFROM"
"CMOVE" -> "JNZD"
"CMOVE" -> "DDROP"
"PACKS" -> "DUP"
"PACKS" -> "TOR"
"PACKS" -> "DDUP"
"PACKS" -> "CSTORE"
"PACKS" -> "CHARP"
"PACKS" -> "SWAP"
"PACKS" -> "CMOVE"
"PACKS" -> "RFROM"
"CSAME" -> "TOR"
"CSAME" -> "OVER"
"CSAME" -> "CLOAD"
"CSAME" -> "SUB"
"CSAME" -> "DUP"
"CSAME" -> "RFROM"
"CSAME" -> "DROP"
"CSAME" -> "DDROP"
"CSAME" -> "CHARP"
"CSAME" -> "SWAP"
"CSAME" -> "JNZD"
"internal_compare" -> "OVER"
"internal_compare" -> "SUB"
"internal_compare" -> "SWAP"
"internal_compare" -> "TOR"
"internal_compare" -> "DDROP"
"internal_compare" -> "RFROM"
"internal_compare" -> "CHARP"
"internal_compare" -> "CSAME"
"CCOMPARE" -> "OVER"
"CCOMPARE" -> "CLOAD"
"CCOMPARE" -> "internal_compare"
"NAMECOMPARE" -> "OVER"
"NAMECOMPARE" -> "CLOAD"
"NAMECOMPARE" -> "AND"
"NAMECOMPARE" -> "internal_compare"
"DOSTR" -> "RFROM"
"DOSTR" -> "RLOAD"
"DOSTR" -> "COUNT"
"DOSTR" -> "PLUS"
"DOSTR" -> "TOR"
"DOSTR" -> "SWAP"
"IMMSTR" -> "DOSTR"
"SHOWSTR" -> "DOSTR"
"SHOWSTR" -> "COUNT"
"SHOWSTR" -> "TYPE"
"PAD" -> "HERE"
"PAD" -> "PLUS"
"BDIGS" -> "PAD"
"BDIGS" -> "STORE"
"EDIGS" -> "DROP"
"EDIGS" -> "LOAD"
"EDIGS" -> "PAD"
"EDIGS" -> "OVER"
"EDIGS" -> "SUB"
"HOLD" -> "LOAD"
"HOLD" -> "DEC"
"HOLD" -> "DUP"
"HOLD" -> "STORE"
"HOLD" -> "CSTORE"
"DIGIT" -> "OVER"
"DIGIT" -> "LESS"
"DIGIT" -> "AND"
"DIGIT" -> "PLUS"
"EXTRACT" -> "SWAP"
"EXTRACT" -> "UMMOD"
"EXTRACT" -> "DIGIT"
"DIG" -> "BASE"
"DIG" -> "LOAD"
"DIG" -> "EXTRACT"
"DIG" -> "HOLD"
"DIGS" -> "DIG"
"DIGS" -> "DUP"
"SIGN" -> "ZLESS"
"SIGN" -> "HOLD"
"STR" -> "DUP"
"STR" -> "TOR"
"STR" -> "ABS"
"STR" -> "BDIGS"
"STR" -> "DIGS"
"STR" -> "RFROM"
"STR" -> "SIGN"
"STR" -> "EDIGS"
"UDOTR" -> "TOR"
"UDOTR" -> "BDIGS"
"UDOTR" -> "DIGS"
"UDOTR" -> "EDIGS"
"UDOTR" -> "RFROM"
"UDOTR" -> "OVER"
"UDOTR" -> "SUB"
"UDOTR" -> "SPACES"
"UDOTR" -> "TYPE"
"DOTR" -> "TOR"
"DOTR" -> "STR"
"DOTR" -> "RFROM"
"DOTR" -> "OVER"
"DOTR" -> "SUB"
"DOTR" -> "SPACES"
"DOTR" -> "TYPE"
"UDOT" -> "SPACE"
"UDOT" -> "BDIGS"
"UDOT" -> "DIGS"
"UDOT" -> "EDIGS"
"UDOT" -> "TYPE"
"DOT" -> "BASE"
"DOT" -> "LOAD"
"DOT" -> "XOR"
"DOT" -> "UDOT"
"DOT" -> "SPACE"
"DOT" -> "STR"
"DOT" -> "TYPE"
"HEX" -> "BASE"
"HEX" -> "STORE"
"DECIMAL" -> "BASE"
"DECIMAL" -> "STORE"
"DIGITQ" -> "TOR"
"DIGITQ" -> "SUB"
"DIGITQ" -> "OVER"
"DIGITQ" -> "LESS"
"DIGITQ" -> "DUP"
"DIGITQ" -> "OR"
"DIGITQ" -> "RFROM"
"DIGITQ" -> "ULESS"
"NUMBERQ" -> "BASE"
"NUMBERQ" -> "LOAD"
"NUMBERQ" -> "TOR"
"NUMBERQ" -> "OVER"
"NUMBERQ" -> "COUNT"
"NUMBERQ" -> "CLOAD"
"NUMBERQ" -> "EQUAL"
"NUMBERQ" -> "HEX"
"NUMBERQ" -> "SWAP"
"NUMBERQ" -> "CHARP"
"NUMBERQ" -> "DEC"
"NUMBERQ" -> "RLOAD"
"NUMBERQ" -> "SUB"
"NUMBERQ" -> "PLUS"
"NUMBERQ" -> "DUPNZ"
"NUMBERQ" -> "DUP"
"NUMBERQ" -> "DIGITQ"
"NUMBERQ" -> "STAR"
"NUMBERQ" -> "RFROM"
"NUMBERQ" -> "INC"
"NUMBERQ" -> "JNZD"
"NUMBERQ" -> "DROP"
"NUMBERQ" -> "NEGATE"
"NUMBERQ" -> "DDROP"
"NUMBERQ" -> "STORE"
"HERE" -> "LOAD"
"UNUSED" -> "RPLOAD"
"UNUSED" -> "HERE"
"UNUSED" -> "SUB"
"SPACE" -> "BL"
"SPACE" -> "EMIT"
"SPACES" -> "MAX"
"SPACES" -> "TOR"
"SPACES" -> "SPACE"
"SPACES" -> "JNZD"
"CR" -> "EMIT"
"BKSP" -> "TOR"
"BKSP" -> "OVER"
"BKSP" -> "RFROM"
"BKSP" -> "SWAP"
"BKSP" -> "XOR"
"BKSP" -> "SUB"
"BKSP" -> "BS"
"BKSP" -> "EMIT"
"BKSP" -> "BL"
"TAP" -> "DUP"
"TAP" -> "EMIT"
"TAP" -> "OVER"
"TAP" -> "CSTORE"
"TAP" -> "CHARP"
"TTAP" -> "DUP"
"TTAP" -> "XOR"
"TTAP" -> "BS"
"TTAP" -> "BL"
"TTAP" -> "TAP"
"TTAP" -> "BKSP"
"TTAP" -> "DROP"
"TTAP" -> "SWAP"
"ACCEPT" -> "OVER"
"ACCEPT" -> "PLUS"
"ACCEPT" -> "DDUP"
"ACCEPT" -> "XOR"
"ACCEPT" -> "KEY"
"ACCEPT" -> "DUP"
"ACCEPT" -> "BL"
"ACCEPT" -> "WITHIN"
"ACCEPT" -> "TAP"
"ACCEPT" -> "TTAP"
"ACCEPT" -> "DROP"
"ACCEPT" -> "SWAP"
"ACCEPT" -> "SUB"
"TYPE" -> "TOR"
"TYPE" -> "DUP"
"TYPE" -> "CLOAD"
"TYPE" -> "EMIT"
"TYPE" -> "CHARP"
"TYPE" -> "JNZD"
"TYPE" -> "DROP"
"TCHAR" -> "AND"
"TCHAR" -> "DUP"
"TCHAR" -> "BL"
"TCHAR" -> "WITHIN"
"TCHAR" -> "DROP"
"LPARSE" -> "STORE"
"LPARSE" -> "OVER"
"LPARSE" -> "TOR"
"LPARSE" -> "DUP"
"LPARSE" -> "DEC"
"LPARSE" -> "LOAD"
"LPARSE" -> "BL"
"LPARSE" -> "EQUAL"
"LPARSE" -> "CLOAD"
"LPARSE" -> "SUB"
"LPARSE" -> "ZLESS"
"LPARSE" -> "NOT"
"LPARSE" -> "PLUS"
"LPARSE" -> "JNZD"
"LPARSE" -> "RFROM"
"LPARSE" -> "DROP"
"LPARSE" -> "SWAP"
"LPARSE" -> "CHARP"
"PARSE" -> "TOR"
"PARSE" -> "LOAD"
"PARSE" -> "TOIN"
"PARSE" -> "PLUS"
"PARSE" -> "SUB"
"PARSE" -> "RFROM"
"PARSE" -> "LPARSE"
"PARSE" -> "PLUS_STORE"
"WORD" -> "PARSE"
"WORD" -> "HERE"
"WORD" -> "PACKS"
"TOKEN" -> "BL"
"TOKEN" -> "WORD"
"DOTPAR" -> "PARSE"
"DOTPAR" -> "TYPE"
"PAR" -> "PARSE"
"PAR" -> "DDROP"
"BSLASH" -> "LOAD"
"BSLASH" -> "TOIN"
"BSLASH" -> "STORE"
"TRWL_FIND" -> "STATE"
"TRWL_FIND" -> "NOT"
"TRWL_FIND" -> "DUP"
"TRWL_FIND" -> "CLOAD"
"TRWL_FIND" -> "AND"
"TRWL_FIND" -> "ROT"
"TRWL_FIND" -> "DDUP"
"TRWL_FIND" -> "NAMECOMPARE"
"TRWL_FIND" -> "DROP"
"TRWL_FIND" -> "CHARP"
"TRWL_FIND" -> "PLUS"
"TRWL_FIND" -> "SWAP"
"TRWL_FIND" -> "NEGATE"
"FIND" -> "LOAD"
"FIND" -> "TRWL"
"CATCH" -> "SPLOAD"
"CATCH" -> "TOR"
"CATCH" -> "HANDLER"
"CATCH" -> "LOAD"
"CATCH" -> "RPLOAD"
"CATCH" -> "STORE"
"CATCH" -> "EXECUTE"
"CATCH" -> "RFROM"
"CATCH" -> "DROP"
"THROW" -> "HANDLER"
"THROW" -> "LOAD"
"THROW" -> "RPSTORE"
"THROW" -> "RFROM"
"THROW" -> "STORE"
"THROW" -> "SWAP"
"THROW" -> "TOR"
"THROW" -> "SPSTORE"
"THROW" -> "DROP"
"ABORT" -> "IMMSTR"
"ABORT" -> "THROW"
"ABORTNZ" -> "DOSTR"
"ABORTNZ" -> "THROW"
"ABORTNZ" -> "DROP"
"STATE" -> "LOAD"
"INTERP" -> "STORE"
"COMPIL" -> "STORE"
"TICK" -> "TOKEN"
"TICK" -> "FIND"
"TICK" -> "THROW"
"ALLOT" -> "PLUS_STORE"
"COMMA" -> "HERE"
"COMMA" -> "DUP"
"COMMA" -> "CELLP"
"COMMA" -> "STORE"
"CCOMMA" -> "HERE"
"CCOMMA" -> "DUP"
"CCOMMA" -> "CHARP"
"CCOMMA" -> "STORE"
"CCOMMA" -> "CSTORE"
"POSTPONE" -> "TICK"
"POSTPONE" -> "COMMA"
"COMPILE_IMM" -> "RFROM"
"COMPILE_IMM" -> "DUP"
"COMPILE_IMM" -> "LOAD"
"COMPILE_IMM" -> "COMMA"
"COMPILE_IMM" -> "CELLP"
"COMPILE_IMM" -> "TOR"
"LITERAL" -> "COMPILE_IMM"
"SCOMPQ" -> "WORD"
"SCOMPQ" -> "CLOAD"
"SCOMPQ" -> "CHARP"
"SCOMPQ" -> "HERE"
"SCOMPQ" -> "PLUS"
"SCOMPQ" -> "STORE"
"FOR" -> "COMPILE_IMM"
"FOR" -> "TOR"
"FOR" -> "HERE"
"NXT" -> "COMPILE_IMM"
"NXT" -> "JNZD"
"AFT" -> "DROP"
"AFT" -> "AHEAD"
"AFT" -> "BEGIN"
"AFT" -> "SWAP"
"BEGIN" -> "HERE"
"UNTIL" -> "COMPILE_IMM"
"AGAIN" -> "COMPILE_IMM"
"IF" -> "COMPILE_IMM"
"IF" -> "COMMA"
"AHEAD" -> "COMPILE_IMM"
"AHEAD" -> "COMMA"
"REPEAT" -> "AGAIN"
"REPEAT" -> "HERE"
"REPEAT" -> "SWAP"
"REPEAT" -> "STORE"
"THEN" -> "HERE"
"THEN" -> "SWAP"
"THEN" -> "STORE"
"ELSE" -> "AHEAD"
"ELSE" -> "SWAP"
"ELSE" -> "THEN"
"WHILE" -> "IF"
"WHILE" -> "SWAP"
"ABORTQ" -> "COMPILE_IMM"
"ABORTQ" -> "ABORTNZ"
"ABORTQ" -> "SCOMPQ"
"STRQ" -> "COMPILE_IMM"
"STRQ" -> "IMMSTR"
"STRQ" -> "SCOMPQ"
"DOTQ" -> "COMPILE_IMM"
"DOTQ" -> "SHOWSTR"
"DOTQ" -> "SCOMPQ"
"SNAME" -> "HERE"
"SNAME" -> "STORE"
"SNAME" -> "LOAD"
"SNAME" -> "COMMA"
"SNAME" -> "TOKEN"
"SNAME" -> "DUP"
"SNAME" -> "FIND"
"SNAME" -> "SHOWSTR"
"SNAME" -> "DROP"
"SNAME" -> "CLOAD"
"SNAME" -> "CHARP"
"SNAME" -> "PLUS"
"COLON" -> "SNAME"
"COLON" -> "COMPILE_IMM"
"COLON" -> "code_ENTER"
"COLON" -> "COMPIL"
"OVERT" -> "LOAD"
"OVERT" -> "STORE"
"SEMICOL" -> "COMPILE_IMM"
"SEMICOL" -> "OVERT"
"SEMICOL" -> "INTERP"
"IMMEDIATE" -> "LOAD"
"IMMEDIATE" -> "CELLP"
"IMMEDIATE" -> "DUP"
"IMMEDIATE" -> "CLOAD"
"IMMEDIATE" -> "OR"
"IMMEDIATE" -> "SWAP"
"IMMEDIATE" -> "CSTORE"
"DOVAR" -> "RFROM"
"CREATE" -> "SNAME"
"CREATE" -> "OVERT"
"CREATE" -> "COMMA"
"CREATE" -> "HERE"
"CREATE" -> "STORE"
"CREATE" -> "COMPILE_IMM"
"CREATE" -> "DOVAR"
"VARIABLE" -> "CREATE"
"VARIABLE" -> "COMMA"
"DOES" -> "COMPILE_IMM"
"DOES" -> "CELLS"
"DOES" -> "PLUS"
"DOES" -> "COMMA"
"DOES" -> "LSTCRP"
"DOES" -> "LOAD"
"DOES" -> "STORE"
"DOES" -> "code_ENTER"
"DOES" -> "RFROM"
"MARKER" -> "HERE"
"MARKER" -> "CREATE"
"MARKER" -> "LOAD"
"MARKER" -> "STORE"
"MARKER" -> "DUP"
"MARKER" -> "LITERAL"
"MARKER" -> "COMPILE_IMM"
"PROMPT" -> "STATE"
"PROMPT" -> "NOT"
"PROMPT" -> "SHOWSTR"
"PROMPT" -> "CR"
"QSTACK" -> "DEPTH"
"QSTACK" -> "ZLESS"
"QSTACK" -> "ABORTNZ"
"EVAL" -> "TOKEN"
"EVAL" -> "DUP"
"EVAL" -> "CLOAD"
"EVAL" -> "FIND"
"EVAL" -> "DUPNZ"
"EVAL" -> "STATE"
"EVAL" -> "XOR"
"EVAL" -> "COMMA"
"EVAL" -> "DROP"
"EVAL" -> "EXECUTE"
"EVAL" -> "NUMBERQ"
"EVAL" -> "LITERAL"
"EVAL" -> "THROW"
"EVAL" -> "QSTACK"
"EVAL" -> "PROMPT"
"HAND" -> "STORE"
"SOURCE" -> "LOAD"
"SAVEINPUT" -> "LOAD"
"SAVEINPUT" -> "TOIN"
"RESTOREINPUT" -> "XOR"
"RESTOREINPUT" -> "STORE"
"RESTOREINPUT" -> "TOIN"
"EVALUATE" -> "SAVEINPUT"
"EVALUATE" -> "TOR"
"EVALUATE" -> "DUP"
"EVALUATE" -> "STORE"
"EVALUATE" -> "TOIN"
"EVALUATE" -> "EVAL"
"EVALUATE" -> "RFROM"
"EVALUATE" -> "RESTOREINPUT"
"CONSOLE" -> "STORE"
"CONSOLE" -> "HAND"
"QUIT" -> "INTERP"
"QUIT" -> "LOAD"
"QUIT" -> "ACCEPT"
"QUIT" -> "STORE"
"QUIT" -> "TOIN"
"QUIT" -> "CATCH"
"QUIT" -> "DUPNZ"
"QUIT" -> "CONSOLE"
"QUIT" -> "SHOWSTR"
"QUIT" -> "COUNT"
"QUIT" -> "TYPE"
"QUIT" -> "CR"
"UTYPE" -> "TOR"
"UTYPE" -> "DUP"
"UTYPE" -> "CLOAD"
"UTYPE" -> "TCHAR"
"UTYPE" -> "EMIT"
"UTYPE" -> "CHARP"
"UTYPE" -> "JNZD"
"UTYPE" -> "DROP"
"DMP" -> "OVER"
"DMP" -> "UDOTR"
"DMP" -> "SPACE"
"DMP" -> "TOR"
"DMP" -> "DUP"
"DMP" -> "CLOAD"
"DMP" -> "INC"
"DMP" -> "JNZD"
"DUMP" -> "BASE"
"DUMP" -> "LOAD"
"DUMP" -> "TOR"
"DUMP" -> "HEX"
"DUMP" -> "SLASH"
"DUMP" -> "CR"
"DUMP" -> "DDUP"
"DUMP" -> "DMP"
"DUMP" -> "ROT"
"DUMP" -> "SPACE"
"DUMP" -> "UTYPE"
"DUMP" -> "NUFQ"
"DUMP" -> "NOT"
"DUMP" -> "JNZD"
"DUMP" -> "RFROM"
"DUMP" -> "DROP"
"DUMP" -> "STORE"
"DOTS" -> "CR"
"DOTS" -> "DEPTH"
"DOTS" -> "TOR"
"DOTS" -> "RLOAD"
"DOTS" -> "PICK"
"DOTS" -> "DOT"
"DOTS" -> "JNZD"
"DOTS" -> "SHOWSTR"
"CSPSTORE" -> "SPLOAD"
"CSPSTORE" -> "STORE"
"CSPCHECK" -> "SPLOAD"
"CSPCHECK" -> "LOAD"
"CSPCHECK" -> "XOR"
"CSPCHECK" -> "ABORTNZ"
"TRWL" -> "DUP"
"TRWL" -> "LOAD"
"TRWL" -> "TOR"
"TRWL" -> "OVER"
"TRWL" -> "CELLP"
"TRWL" -> "SWAP"
"TRWL" -> "EXECUTE"
"TRWL" -> "RFROM"
"TRWL" -> "DUPNZ"
"TRWL" -> "DROP"
"TRWL_TYPE" -> "DUP"
"TRWL_TYPE" -> "COUNT"
"TRWL_TYPE" -> "AND"
"TRWL_TYPE" -> "SPACE"
"TRWL_TYPE" -> "TYPE"
"WORDS" -> "CR"
"WORDS" -> "LOAD"
"WORDS" -> "TRWL"
"CLEAR" -> "STORE"
"hi" -> "CR"
"hi" -> "SHOWSTR"
"hi" -> "BASE"
"hi" -> "LOAD"
"hi" -> "TOR"
"hi" -> "HEX"
"hi" -> "VER"
"hi" -> "BDIGS"
"hi" -> "DIG"
"hi" -> "HOLD"
"hi" -> "EDIGS"
"hi" -> "TYPE"
"hi" -> "RFROM"
"hi" -> "STORE"
"SPISEND" -> "SPITXRX"
"SPIRECV" -> "SWAP"
"SPIRECV" -> "SPITXRX"
"SPITRAN" -> "DUP"
"SPITRAN" -> "SPITXRX"
}
