strict digraph words {
"EXECUTE" [shape=box]
"!" [shape=box]
"C!" [shape=box]
"@" [shape=box]
"C@" [shape=box]
"R>" [shape=box]
">R" [shape=box]
"@R" [shape=box]
"SP@" [shape=box]
"SP!" [shape=box]
"RP@" [shape=box]
"RP!" [shape=box]
"DUP" [shape=box]
"OVER" [shape=box]
"SWAP" [shape=box]
"DROP" [shape=box]
"UM+" [shape=box]
"+" [shape=box]
"XOR" [shape=box]
"AND" [shape=box]
"OR" [shape=box]
"0<" [shape=box]
"EMIT" [shape=box]
"?KEY" [shape=box]
"KEY" -> "QKEY"
"KEY" -> "BRANCHZ"
"KEY" -> "RETURN"
"NUF?" -> "QKEY"
"NUF?" -> "DUP"
"NUF?" -> "BRANCHZ"
"NUF?" -> "DDROP"
"NUF?" -> "KEY"
"NUF?" -> "IMM"
"NUF?" -> "EQUAL"
"NUF?" -> "RETURN"
"SP0" -> "IMM"
"SP0" -> "RETURN"
"RP0" -> "IMM"
"RP0" -> "RETURN"
"DEPTH" -> "SPLOAD"
"DEPTH" -> "SPZERO"
"DEPTH" -> "SWAP"
"DEPTH" -> "SUB"
"DEPTH" -> "IMM"
"DEPTH" -> "SLASH"
"DEPTH" -> "RETURN"
"PICK" -> "IMM"
"PICK" -> "PLUS"
"PICK" -> "CELLS"
"PICK" -> "SPLOAD"
"PICK" -> "LOAD"
"PICK" -> "RETURN"
"PICK" -> "DUP"
"PICK" -> "BRANCHZ"
"PICK" -> "EXECUTE"
"2DUP" -> "OVER"
"2DUP" -> "RETURN"
"2DROP" -> "DROP"
"2DROP" -> "RETURN"
"?DUP" -> "DUP"
"?DUP" -> "BRANCHZ"
"?DUP" -> "RETURN"
"ROT" -> "TOR"
"ROT" -> "SWAP"
"ROT" -> "RFROM"
"ROT" -> "RETURN"
"NOT" -> "IMM"
"NOT" -> "XOR"
"NOT" -> "RETURN"
"NEGATE" -> "NOT"
"NEGATE" -> "IMM"
"NEGATE" -> "PLUS"
"NEGATE" -> "RETURN"
"DNEGATE" -> "NOT"
"DNEGATE" -> "TOR"
"DNEGATE" -> "IMM"
"DNEGATE" -> "UPLUS"
"DNEGATE" -> "RFROM"
"DNEGATE" -> "PLUS"
"DNEGATE" -> "RETURN"
"-" -> "NEGATE"
"-" -> "PLUS"
"-" -> "RETURN"
"ABS" -> "DUP"
"ABS" -> "ZLESS"
"ABS" -> "BRANCHZ"
"ABS" -> "NEGATE"
"ABS" -> "RETURN"
"UM*" -> "IMM"
"UM*" -> "SWAP"
"UM*" -> "TOR"
"UM*" -> "DUP"
"UM*" -> "UPLUS"
"UM*" -> "RFROM"
"UM*" -> "PLUS"
"UM*" -> "BRANCHZ"
"UM*" -> "OVER"
"UM*" -> "JNZD"
"UM*" -> "ROT"
"UM*" -> "DROP"
"UM*" -> "RETURN"
"*" -> "UMSTAR"
"*" -> "DROP"
"*" -> "RETURN"
"M*" -> "DDUP"
"M*" -> "XOR"
"M*" -> "ZLESS"
"M*" -> "TOR"
"M*" -> "ABS"
"M*" -> "SWAP"
"M*" -> "UMSTAR"
"M*" -> "RFROM"
"M*" -> "BRANCHZ"
"M*" -> "DNEGATE"
"M*" -> "RETURN"
"UM/MOD" -> "DDUP"
"UM/MOD" -> "ULESS"
"UM/MOD" -> "BRANCHZ"
"UM/MOD" -> "NEGATE"
"UM/MOD" -> "IMM"
"UM/MOD" -> "TOR"
"UM/MOD" -> "DUP"
"UM/MOD" -> "UPLUS"
"UM/MOD" -> "RFROM"
"UM/MOD" -> "PLUS"
"UM/MOD" -> "RLOAD"
"UM/MOD" -> "SWAP"
"UM/MOD" -> "OR"
"UM/MOD" -> "DROP"
"UM/MOD" -> "BRANCH"
"UM/MOD" -> "JNZD"
"UM/MOD" -> "RETURN"
"UM/MOD" -> "DDROP"
"M/MOD" -> "DUP"
"M/MOD" -> "ZLESS"
"M/MOD" -> "TOR"
"M/MOD" -> "BRANCHZ"
"M/MOD" -> "NEGATE"
"M/MOD" -> "DNEGATE"
"M/MOD" -> "RFROM"
"M/MOD" -> "RLOAD"
"M/MOD" -> "PLUS"
"M/MOD" -> "UMMOD"
"M/MOD" -> "SWAP"
"M/MOD" -> "RETURN"
"/MOD" -> "OVER"
"/MOD" -> "ZLESS"
"/MOD" -> "SWAP"
"/MOD" -> "MSMOD"
"/MOD" -> "RETURN"
"MOD" -> "SLMOD"
"MOD" -> "DROP"
"MOD" -> "RETURN"
"/" -> "SLMOD"
"/" -> "SWAP"
"/" -> "DROP"
"/" -> "RETURN"
"CELL+" -> "IMM"
"CELL+" -> "PLUS"
"CELL+" -> "RETURN"
"CHAR+" -> "IMM"
"CHAR+" -> "PLUS"
"CHAR+" -> "RETURN"
"CELLS" -> "DUP"
"CELLS" -> "PLUS"
"CELLS" -> "RETURN"
"U<" -> "DDUP"
"U<" -> "XOR"
"U<" -> "ZLESS"
"U<" -> "BRANCHZ"
"U<" -> "SWAP"
"U<" -> "DROP"
"U<" -> "RETURN"
"U<" -> "SUB"
"<" -> "DDUP"
"<" -> "XOR"
"<" -> "ZLESS"
"<" -> "BRANCHZ"
"<" -> "DROP"
"<" -> "RETURN"
"<" -> "SUB"
"MAX" -> "DDUP"
"MAX" -> "LESS"
"MAX" -> "BRANCHZ"
"MAX" -> "SWAP"
"MAX" -> "DROP"
"MAX" -> "RETURN"
"MIN" -> "DDUP"
"MIN" -> "SWAP"
"MIN" -> "LESS"
"MIN" -> "BRANCHZ"
"MIN" -> "DROP"
"MIN" -> "RETURN"
"WITHIN" -> "OVER"
"WITHIN" -> "SUB"
"WITHIN" -> "TOR"
"WITHIN" -> "RFROM"
"WITHIN" -> "ULESS"
"WITHIN" -> "RETURN"
"EQUAL" -> "XOR"
"EQUAL" -> "BRANCHZ"
"EQUAL" -> "IMM"
"EQUAL" -> "RETURN"
"COUNT" -> "DUP"
"COUNT" -> "IMM"
"COUNT" -> "PLUS"
"COUNT" -> "SWAP"
"COUNT" -> "CLOAD"
"COUNT" -> "RETURN"
"CMOVE" -> "TOR"
"CMOVE" -> "BRANCH"
"CMOVE" -> "DUP"
"CMOVE" -> "CLOAD"
"CMOVE" -> "RLOAD"
"CMOVE" -> "CSTORE"
"CMOVE" -> "IMM"
"CMOVE" -> "PLUS"
"CMOVE" -> "RFROM"
"CMOVE" -> "JNZD"
"CMOVE" -> "DDROP"
"CMOVE" -> "RETURN"
"PACK$" -> "DUP"
"PACK$" -> "TOR"
"PACK$" -> "DDUP"
"PACK$" -> "CSTORE"
"PACK$" -> "IMM"
"PACK$" -> "PLUS"
"PACK$" -> "SWAP"
"PACK$" -> "CMOVE"
"PACK$" -> "RFROM"
"PACK$" -> "RETURN"
"CSAME?" -> "TOR"
"CSAME?" -> "BRANCH"
"CSAME?" -> "OVER"
"CSAME?" -> "CLOAD"
"CSAME?" -> "SUB"
"CSAME?" -> "DUP"
"CSAME?" -> "BRANCHZ"
"CSAME?" -> "RFROM"
"CSAME?" -> "DROP"
"CSAME?" -> "DDROP"
"CSAME?" -> "RETURN"
"CSAME?" -> "CHARP"
"CSAME?" -> "JNZD"
"CSAME?" -> "IMM"
"CSAME?" -> "COUNT"
"CSAME?" -> "SWAP"
"CSAME?" -> "CSAME"
"CCOMPARE" -> "OVER"
"CCOMPARE" -> "CLOAD"
"CCOMPARE" -> "internal_compare"
"CCOMPARE" -> "RETURN"
"NAMECOMPARE" -> "OVER"
"NAMECOMPARE" -> "CLOAD"
"NAMECOMPARE" -> "IMM"
"NAMECOMPARE" -> "AND"
"NAMECOMPARE" -> "internal_compare"
"NAMECOMPARE" -> "RETURN"
"NAMECOMPARE" -> "RFROM"
"NAMECOMPARE" -> "RLOAD"
"NAMECOMPARE" -> "COUNT"
"NAMECOMPARE" -> "PLUS"
"NAMECOMPARE" -> "TOR"
"NAMECOMPARE" -> "SWAP"
"str\"|" -> "DOSTR"
"str\"|" -> "RETURN"
"PAD" -> "HERE"
"PAD" -> "IMM"
"PAD" -> "PLUS"
"PAD" -> "RETURN"
"<#" -> "PAD"
"<#" -> "IMM"
"<#" -> "STORE"
"<#" -> "RETURN"
"#>" -> "DROP"
"#>" -> "IMM"
"#>" -> "LOAD"
"#>" -> "PAD"
"#>" -> "OVER"
"#>" -> "SUB"
"#>" -> "RETURN"
"HOLD" -> "IMM"
"HOLD" -> "LOAD"
"HOLD" -> "SUB"
"HOLD" -> "DUP"
"HOLD" -> "STORE"
"HOLD" -> "CSTORE"
"HOLD" -> "RETURN"
"DIGIT" -> "IMM"
"DIGIT" -> "OVER"
"DIGIT" -> "LESS"
"DIGIT" -> "AND"
"DIGIT" -> "PLUS"
"DIGIT" -> "RETURN"
"EXTRACT" -> "IMM"
"EXTRACT" -> "SWAP"
"EXTRACT" -> "UMMOD"
"EXTRACT" -> "DIGIT"
"EXTRACT" -> "RETURN"
"#" -> "BASE"
"#" -> "LOAD"
"#" -> "EXTRACT"
"#" -> "HOLD"
"#" -> "RETURN"
"#S" -> "DIG"
"#S" -> "DUP"
"#S" -> "BRANCHZ"
"#S" -> "BRANCH"
"#S" -> "RETURN"
"SIGN" -> "ZLESS"
"SIGN" -> "BRANCHZ"
"SIGN" -> "IMM"
"SIGN" -> "HOLD"
"SIGN" -> "RETURN"
"STR" -> "DUP"
"STR" -> "TOR"
"STR" -> "ABS"
"STR" -> "BDIGS"
"STR" -> "DIGS"
"STR" -> "RFROM"
"STR" -> "SIGN"
"STR" -> "EDIGS"
"STR" -> "RETURN"
"U.R" -> "TOR"
"U.R" -> "BDIGS"
"U.R" -> "DIGS"
"U.R" -> "EDIGS"
"U.R" -> "RFROM"
"U.R" -> "OVER"
"U.R" -> "SUB"
"U.R" -> "SPACES"
"U.R" -> "TYPE"
"U.R" -> "RETURN"
".R" -> "TOR"
".R" -> "STR"
".R" -> "RFROM"
".R" -> "OVER"
".R" -> "SUB"
".R" -> "SPACES"
".R" -> "TYPE"
".R" -> "RETURN"
"U." -> "SPACE"
"U." -> "BDIGS"
"U." -> "DIGS"
"U." -> "EDIGS"
"U." -> "TYPE"
"U." -> "RETURN"
"." -> "BASE"
"." -> "LOAD"
"." -> "IMM"
"." -> "XOR"
"." -> "BRANCHZ"
"." -> "UDOT"
"." -> "RETURN"
"." -> "SPACE"
"." -> "STR"
"." -> "TYPE"
"BASE" -> "IMM"
"BASE" -> "RETURN"
"HEX" -> "IMM"
"HEX" -> "BASE"
"HEX" -> "STORE"
"HEX" -> "RETURN"
"DECIMAL" -> "IMM"
"DECIMAL" -> "BASE"
"DECIMAL" -> "STORE"
"DECIMAL" -> "RETURN"
"DIGIT?" -> "TOR"
"DIGIT?" -> "IMM"
"DIGIT?" -> "SUB"
"DIGIT?" -> "OVER"
"DIGIT?" -> "LESS"
"DIGIT?" -> "BRANCHZ"
"DIGIT?" -> "DUP"
"DIGIT?" -> "OR"
"DIGIT?" -> "RFROM"
"DIGIT?" -> "ULESS"
"DIGIT?" -> "RETURN"
"NUMBER?" -> "BASE"
"NUMBER?" -> "LOAD"
"NUMBER?" -> "TOR"
"NUMBER?" -> "IMM"
"NUMBER?" -> "OVER"
"NUMBER?" -> "COUNT"
"NUMBER?" -> "CLOAD"
"NUMBER?" -> "EQUAL"
"NUMBER?" -> "BRANCHZ"
"NUMBER?" -> "HEX"
"NUMBER?" -> "SWAP"
"NUMBER?" -> "PLUS"
"NUMBER?" -> "SUB"
"NUMBER?" -> "RLOAD"
"NUMBER?" -> "DUPNZ"
"NUMBER?" -> "DUP"
"NUMBER?" -> "DIGITQ"
"NUMBER?" -> "STAR"
"NUMBER?" -> "RFROM"
"NUMBER?" -> "JNZD"
"NUMBER?" -> "DROP"
"NUMBER?" -> "NEGATE"
"NUMBER?" -> "BRANCH"
"NUMBER?" -> "DDROP"
"NUMBER?" -> "STORE"
"NUMBER?" -> "RETURN"
"HERE" -> "IMM"
"HERE" -> "LOAD"
"HERE" -> "RETURN"
"+!" -> "SWAP"
"+!" -> "OVER"
"+!" -> "LOAD"
"+!" -> "PLUS"
"+!" -> "STORE"
"+!" -> "RETURN"
"BS" -> "IMM"
"BS" -> "RETURN"
"BL" -> "IMM"
"BL" -> "RETURN"
"SPACE" -> "BL"
"SPACE" -> "EMIT"
"SPACE" -> "RETURN"
"SPACES" -> "IMM"
"SPACES" -> "MAX"
"SPACES" -> "TOR"
"SPACES" -> "BRANCH"
"SPACES" -> "SPACE"
"SPACES" -> "JNZD"
"SPACES" -> "RETURN"
"CR" -> "IMM"
"CR" -> "EMIT"
"CR" -> "RETURN"
"BKSP" -> "TOR"
"BKSP" -> "OVER"
"BKSP" -> "RFROM"
"BKSP" -> "SWAP"
"BKSP" -> "XOR"
"BKSP" -> "BRANCHZ"
"BKSP" -> "IMM"
"BKSP" -> "SUB"
"BKSP" -> "BS"
"BKSP" -> "EMIT"
"BKSP" -> "BL"
"BKSP" -> "RETURN"
"TAP" -> "DUP"
"TAP" -> "EMIT"
"TAP" -> "OVER"
"TAP" -> "CSTORE"
"TAP" -> "IMM"
"TAP" -> "PLUS"
"TAP" -> "RETURN"
"TTAP" -> "DUP"
"TTAP" -> "IMM"
"TTAP" -> "XOR"
"TTAP" -> "BRANCHZ"
"TTAP" -> "BS"
"TTAP" -> "BL"
"TTAP" -> "TAP"
"TTAP" -> "RETURN"
"TTAP" -> "BKSP"
"TTAP" -> "DROP"
"TTAP" -> "SWAP"
"ACCEPT" -> "OVER"
"ACCEPT" -> "PLUS"
"ACCEPT" -> "DDUP"
"ACCEPT" -> "XOR"
"ACCEPT" -> "BRANCHZ"
"ACCEPT" -> "KEY"
"ACCEPT" -> "DUP"
"ACCEPT" -> "BL"
"ACCEPT" -> "IMM"
"ACCEPT" -> "WITHIN"
"ACCEPT" -> "TAP"
"ACCEPT" -> "BRANCH"
"ACCEPT" -> "TTAP"
"ACCEPT" -> "DROP"
"ACCEPT" -> "SUB"
"ACCEPT" -> "RETURN"
"TYPE" -> "TOR"
"TYPE" -> "BRANCH"
"TYPE" -> "DUP"
"TYPE" -> "CLOAD"
"TYPE" -> "EMIT"
"TYPE" -> "IMM"
"TYPE" -> "PLUS"
"TYPE" -> "JNZD"
"TYPE" -> "DROP"
"TYPE" -> "RETURN"
">CHAR" -> "IMM"
">CHAR" -> "AND"
">CHAR" -> "DUP"
">CHAR" -> "BL"
">CHAR" -> "WITHIN"
">CHAR" -> "BRANCHZ"
">CHAR" -> "DROP"
">CHAR" -> "RETURN"
"parse" -> "IMM"
"parse" -> "STORE"
"parse" -> "OVER"
"parse" -> "TOR"
"parse" -> "DUP"
"parse" -> "BRANCHZ"
"parse" -> "SUB"
"parse" -> "LOAD"
"parse" -> "BL"
"parse" -> "EQUAL"
"parse" -> "CLOAD"
"parse" -> "ZLESS"
"parse" -> "NOT"
"parse" -> "PLUS"
"parse" -> "JNZD"
"parse" -> "RFROM"
"parse" -> "DROP"
"parse" -> "RETURN"
"parse" -> "SWAP"
"parse" -> "BRANCH"
"PARSE" -> "TOR"
"PARSE" -> "IMM"
"PARSE" -> "LOAD"
"PARSE" -> "PLUS"
"PARSE" -> "SUB"
"PARSE" -> "RFROM"
"PARSE" -> "LPARSE"
"PARSE" -> "PLUS_STORE"
"PARSE" -> "RETURN"
".(" -> "IMM"
".(" -> "PARSE"
".(" -> "TYPE"
".(" -> "RETURN"
"(" -> "IMM"
"(" -> "PARSE"
"(" -> "DDROP"
"(" -> "RETURN"
"\" -> "IMM"
"\" -> "LOAD"
"\" -> "STORE"
"\" -> "RETURN"
"FIND" -> "DUP"
"FIND" -> "LOAD"
"FIND" -> "TOR"
"FIND" -> "CELLP"
"FIND" -> "DDUP"
"FIND" -> "NAMECOMPARE"
"FIND" -> "BRANCHZ"
"FIND" -> "DROP"
"FIND" -> "RFROM"
"FIND" -> "BRANCH"
"FIND" -> "IMM"
"FIND" -> "RETURN"
"FIND" -> "CLOAD"
"FIND" -> "CHARP"
"FIND" -> "PLUS"
"FIND" -> "SWAP"
"WORD" -> "PARSE"
"WORD" -> "HERE"
"WORD" -> "PACKS"
"WORD" -> "RETURN"
"TOKEN" -> "BL"
"TOKEN" -> "WORD"
"TOKEN" -> "RETURN"
"NAME?" -> "IMM"
"NAME?" -> "LOAD"
"NAME?" -> "FIND"
"NAME?" -> "RETURN"
"HANDLER" -> "IMM"
"HANDLER" -> "RETURN"
"CATCH" -> "SPLOAD"
"CATCH" -> "TOR"
"CATCH" -> "HANDLER"
"CATCH" -> "LOAD"
"CATCH" -> "RPLOAD"
"CATCH" -> "STORE"
"CATCH" -> "EXECUTE"
"CATCH" -> "RFROM"
"CATCH" -> "DROP"
"CATCH" -> "IMM"
"CATCH" -> "RETURN"
"THROW" -> "HANDLER"
"THROW" -> "LOAD"
"THROW" -> "RPSTORE"
"THROW" -> "RFROM"
"THROW" -> "STORE"
"THROW" -> "SWAP"
"THROW" -> "TOR"
"THROW" -> "SPSTORE"
"THROW" -> "DROP"
"THROW" -> "RETURN"
"ABORT" -> "IMMSTR"
"ABORT" -> "THROW"
"abort\"" -> "BRANCHZ"
"abort\"" -> "DOSTR"
"abort\"" -> "THROW"
"abort\"" -> "DROP"
"abort\"" -> "RETURN"
"[" -> "IMM"
"[" -> "STORE"
"[" -> "RETURN"
"$INTERPRET" -> "ISNAME"
"$INTERPRET" -> "BRANCHZ"
"$INTERPRET" -> "EXECUTE"
"$INTERPRET" -> "RETURN"
"$INTERPRET" -> "NUMBERQ"
"$INTERPRET" -> "THROW"
"]" -> "IMM"
"]" -> "STORE"
"]" -> "RETURN"
"$COMPILE" -> "ISNAME"
"$COMPILE" -> "DUPNZ"
"$COMPILE" -> "BRANCHZ"
"$COMPILE" -> "CLOAD"
"$COMPILE" -> "IMM"
"$COMPILE" -> "AND"
"$COMPILE" -> "EXECUTE"
"$COMPILE" -> "RETURN"
"$COMPILE" -> "COMMA"
"$COMPILE" -> "NUMBERQ"
"$COMPILE" -> "LITTERAL"
"$COMPILE" -> "THROW"
"'" -> "TOKEN"
"'" -> "ISNAME"
"'" -> "BRANCHZ"
"'" -> "RETURN"
"'" -> "THROW"
"ALLOT" -> "IMM"
"ALLOT" -> "PLUS_STORE"
"ALLOT" -> "RETURN"
"," -> "HERE"
"," -> "DUP"
"," -> "CELLP"
"," -> "IMM"
"," -> "STORE"
"," -> "RETURN"
"C," -> "HERE"
"C," -> "DUP"
"C," -> "CHARP"
"C," -> "IMM"
"C," -> "STORE"
"C," -> "CSTORE"
"C," -> "RETURN"
"[COMPILE]" -> "TICK"
"[COMPILE]" -> "COMMA"
"[COMPILE]" -> "RETURN"
"COMPILE" -> "RFROM"
"COMPILE" -> "DUP"
"COMPILE" -> "LOAD"
"COMPILE" -> "COMMA"
"COMPILE" -> "CELLP"
"COMPILE" -> "TOR"
"COMPILE" -> "RETURN"
"LITTERAL" -> "COMPILE"
"LITTERAL" -> "IMM"
"LITTERAL" -> "RETURN"
"$,\"" -> "IMM"
"$,\"" -> "WORD"
"$,\"" -> "COUNT"
"$,\"" -> "PLUS"
"$,\"" -> "HERE"
"$,\"" -> "STORE"
"$,\"" -> "RETURN"
"FOR" -> "RETURN"
"BEGIN" -> "RETURN"
"NEXT" -> "RETURN"
"UNTIL" -> "RETURN"
"AGAIN" -> "RETURN"
"IF" -> "RETURN"
"AHEAD" -> "RETURN"
"REPEAT" -> "RETURN"
"THEN" -> "RETURN"
"AFT" -> "RETURN"
"ELSE" -> "RETURN"
"WHILE" -> "RETURN"
"ABORT\"" -> "RETURN"
"$\"" -> "RETURN"
".\"" -> "RETURN"
"?UNIQUE" -> "RETURN"
"$,N" -> "RETURN"
":" -> "IMM"
":" -> "LOAD"
":" -> "COMMA"
":" -> "TOKEN"
":" -> "COMPIL"
":" -> "RETURN"
"OVERT" -> "RETURN"
";" -> "COMPILE"
";" -> "RETURN"
";" -> "INTERP"
";" -> "OVERT"
"IMMEDIATE" -> "RETURN"
"CREATE" -> "RETURN"
"VARIABLE" -> "RETURN"
"PROMPT" -> "IMM"
"PROMPT" -> "LOAD"
"PROMPT" -> "EQUAL"
"PROMPT" -> "BRANCHZ"
"PROMPT" -> "IMMSTR"
"PROMPT" -> "COUNT"
"PROMPT" -> "TYPE"
"PROMPT" -> "CR"
"PROMPT" -> "RETURN"
"?STACK" -> "DEPTH"
"?STACK" -> "ZLESS"
"?STACK" -> "ABORTZ"
"?STACK" -> "RETURN"
"eval" -> "TOKEN"
"eval" -> "DUP"
"eval" -> "CLOAD"
"eval" -> "BRANCHZ"
"eval" -> "IMM"
"eval" -> "LOADEXEC"
"eval" -> "QSTACK"
"eval" -> "BRANCH"
"eval" -> "DROP"
"eval" -> "PROMPT"
"eval" -> "RETURN"
"QUERY" -> "IMM"
"QUERY" -> "ACCEPT"
"QUERY" -> "STORE"
"QUERY" -> "DROP"
"QUERY" -> "RETURN"
"QUIT" -> "INTERP"
"QUIT" -> "QUERY"
"QUIT" -> "IMM"
"QUIT" -> "STORE"
"QUIT" -> "CATCH"
"QUIT" -> "DUPNZ"
"QUIT" -> "BRANCHZ"
"QUIT" -> "IMMSTR"
"QUIT" -> "COUNT"
"QUIT" -> "TYPE"
"QUIT" -> "CR"
"QUIT" -> "BRANCH"
"_TYPE" -> "TOR"
"_TYPE" -> "BRANCH"
"_TYPE" -> "DUP"
"_TYPE" -> "CLOAD"
"_TYPE" -> "TCHAR"
"_TYPE" -> "EMIT"
"_TYPE" -> "IMM"
"_TYPE" -> "PLUS"
"_TYPE" -> "JNZD"
"_TYPE" -> "DROP"
"_TYPE" -> "RETURN"
"dm+" -> "OVER"
"dm+" -> "IMM"
"dm+" -> "UDOTR"
"dm+" -> "SPACE"
"dm+" -> "TOR"
"dm+" -> "BRANCH"
"dm+" -> "DUP"
"dm+" -> "CLOAD"
"dm+" -> "PLUS"
"dm+" -> "JNZD"
"dm+" -> "RETURN"
"DUMP" -> "BASE"
"DUMP" -> "LOAD"
"DUMP" -> "TOR"
"DUMP" -> "HEX"
"DUMP" -> "IMM"
"DUMP" -> "SLASH"
"DUMP" -> "CR"
"DUMP" -> "DDUP"
"DUMP" -> "DMP"
"DUMP" -> "ROT"
"DUMP" -> "SPACE"
"DUMP" -> "UTYPE"
"DUMP" -> "NUFQ"
"DUMP" -> "NOT"
"DUMP" -> "BRANCHZ"
"DUMP" -> "JNZD"
"DUMP" -> "BRANCH"
"DUMP" -> "RFROM"
"DUMP" -> "DROP"
"DUMP" -> "STORE"
"DUMP" -> "RETURN"
".S" -> "CR"
".S" -> "DEPTH"
".S" -> "TOR"
".S" -> "BRANCH"
".S" -> "RLOAD"
".S" -> "PICK"
".S" -> "DOT"
".S" -> "JNZD"
".S" -> "IMMSTR"
".S" -> "COUNT"
".S" -> "TYPE"
".S" -> "RETURN"
"!CSP" -> "SPLOAD"
"!CSP" -> "IMM"
"!CSP" -> "STORE"
"!CSP" -> "RETURN"
"?CSP" -> "SPLOAD"
"?CSP" -> "IMM"
"?CSP" -> "LOAD"
"?CSP" -> "XOR"
"?CSP" -> "ABORTZ"
"?CSP" -> "RETURN"
"WORDS" -> "RETURN"
"VER" -> "IMM"
"VER" -> "RETURN"
"hi" -> "CR"
"hi" -> "IMMSTR"
"hi" -> "COUNT"
"hi" -> "TYPE"
"hi" -> "BASE"
"hi" -> "LOAD"
"hi" -> "TOR"
"hi" -> "HEX"
"hi" -> "VER"
"hi" -> "BDIGS"
"hi" -> "DIG"
"hi" -> "IMM"
"hi" -> "HOLD"
"hi" -> "EDIGS"
"hi" -> "RFROM"
"hi" -> "STORE"
"hi" -> "RETURN"
"BOOT" -> "hi"
"BOOT" -> "DECIMAL"
"BOOT" -> "QUIT"
}
